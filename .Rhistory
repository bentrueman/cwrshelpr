pattern = ".+\\.csv"
)
data <- read_feem(file[1])
calculate_indices(data)
calculate_indices(data) %>% pull(value)
file <- list.files(
path = system.file("extdata", package = "cwrshelpr"),
full.names = TRUE,
pattern = ".+\\.csv"
)
data <- read_feem(file[2])
calculate_indices(data)
document()
file <- list.files(
path = system.file("extdata", package = "cwrshelpr"),
full.names = TRUE,
pattern = ".+\\.csv"
)
data <- read_feem(file[1])
calculate_indices(data)
file <- list.files(
path = system.file("extdata", package = "cwrshelpr"),
full.names = TRUE,
pattern = ".+\\.csv"
)
data <- read_feem(file[2])
calculate_indices(data)
ix$value
file <- list.files(
path = system.file("extdata", package = "cwrshelpr"),
full.names = TRUE,
pattern = ".+\\.csv"
)
data <- read_feem(file[1])
ix <- calculate_indices(data)
ix
data <- read_feem(file[2])
ix <- calculate_indices(data)
ix
ix$value
file <- list.files(
path = system.file("extdata", package = "cwrshelpr"),
full.names = TRUE,
pattern = ".+\\.csv"
)
data <- read_feem(file[1])
calculate_indices(data)
source("~/Documents/GitHub/cwrshelpr/tests/testthat/test-calculate_indices.R", echo=TRUE)
check()
use_r("calculate_indices")
document()
check()
build_readme()
build_readme()
feemdat
files <- list.files(
path = system.file("extdata", package = "cwrshelpr"), # replace this line with the path to your data
full.names = TRUE,
pattern = ".+\\.csv"
)
read_feem(path = files[1]) # read and clean one file
feem_dat <- files %>%
set_names() %>%
map_dfr(~ read_feem(.x, truncate = TRUE), .id = "file") # read and clean multiple files
feemdat
feem_dat <- files %>%
set_names() %>%
map_dfr(~ read_feem(.x, truncate = TRUE), .id = "file") # read and clean multiple files
feemdat
feem_dat
?calculate_indices
mutate(ix = map(data, calculate_indices)
feem_dat %>%
group_by(file) %>%
nest() %>%
ungroup() %>%
mutate(ix = map(data, calculate_indices))
library(tidyverse)
feem_dat %>%
group_by(file) %>%
nest() %>%
ungroup() %>%
mutate(ix = map(data, calculate_indices))
feem_dat %>%
group_by(file) %>%
nest() %>%
ungroup() %>%
mutate(ix = map(data, calculate_indices)) %>%
unnest(ix)
build_readme()
test::install_github("bentrueman/cwrshelpr")
build_readme()
library(devtools)
build_readme()
library("tidyverrse")
build_readme()
install.packages("edwards97")
build_readme()
library(devtools)
build_readme()
library*devtools
library(devtools)
build_readme()
library(devtools)
check()
test_coverage()
use_github_action_check_release()
use_coverage()
use_github_action("test-coverage")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.path = "man/figures/README-",
out.width = "100%",
dev = "png",
dpi = 600
)
library("tidyverse")
library("cwrshelpr")
# example path to example raw data file
files <- list.files(
# replace this line with the path to your data:
path = system.file("extdata", package = "cwrshelpr"),
full.names = TRUE,
pattern = ".+\\.xlsx"
)
read_icp(path = files[1]) # read and clean one file
files %>%
set_names() %>%
map_dfr(read_icp, .id = "file") # read and clean multiple files
theme_set(theme_bw())
files <- list.files(
path = system.file("extdata", package = "cwrshelpr"), # replace this line with the path to your data
full.names = TRUE,
pattern = ".+\\.csv"
)
read_feem(path = files[1]) # read and clean one file
feem_dat <- files %>%
set_names() %>%
map_dfr(~ read_feem(.x, truncate = TRUE), .id = "file") # read and clean multiple files
feem_dat %>%
ggplot(aes(excitation, em_regular, fill = intensity)) +
facet_wrap(vars(file)) +
geom_raster() +
scale_fill_viridis_c()
feem_dat %>%
ggplot(aes(excitation, em_regular, z = intensity, fill = stat(level))) +
facet_wrap(vars(file)) +
stat_contour(geom = "polygon") +
scale_fill_viridis_c("intensity")
feem_dat %>%
group_by(file) %>%
nest() %>%
ungroup() %>%
mutate(regions = map(data, integrate_regions)) %>%
unnest(regions)
feem_dat %>%
group_by(file) %>%
nest() %>%
ungroup() %>%
mutate(ix = map(data, calculate_indices)) %>%
unnest(ix)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.path = "man/figures/README-",
out.width = "100%",
dev = "png",
dpi = 600
)
library("tidyverse")
library("cwrshelpr")
# example path to example raw data file
files <- list.files(
# replace this line with the path to your data:
path = system.file("extdata", package = "cwrshelpr"),
full.names = TRUE,
pattern = ".+\\.xlsx"
)
read_icp(path = files[1]) # read and clean one file
files %>%
set_names() %>%
map_dfr(read_icp, .id = "file") # read and clean multiple files
theme_set(theme_bw())
files <- list.files(
path = system.file("extdata", package = "cwrshelpr"), # replace this line with the path to your data
full.names = TRUE,
pattern = ".+\\.csv"
)
read_feem(path = files[1]) # read and clean one file
feem_dat <- files %>%
set_names() %>%
map_dfr(~ read_feem(.x, truncate = TRUE), .id = "file") # read and clean multiple files
feem_dat %>%
ggplot(aes(excitation, em_regular, fill = intensity)) +
facet_wrap(vars(file)) +
geom_raster() +
scale_fill_viridis_c()
feem_dat %>%
ggplot(aes(excitation, em_regular, z = intensity, fill = stat(level))) +
facet_wrap(vars(file)) +
stat_contour(geom = "polygon") +
scale_fill_viridis_c("intensity")
feem_dat %>%
group_by(file) %>%
nest() %>%
ungroup() %>%
mutate(regions = map(data, integrate_regions)) %>%
unnest(regions)
feem_dat %>%
group_by(file) %>%
nest() %>%
ungroup() %>%
mutate(ix = map(data, calculate_indices)) %>%
unnest(ix)
library("cwrshelpr")
calculate_indices()
?calculate_indices()
?read_icp
document()
library(devtools)
document()
?calculate_indices
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.path = "man/figures/README-",
out.width = "100%",
dev = "png",
dpi = 600
)
library("tidyverse")
library("cwrshelpr")
# example path to example raw data file
files <- list.files(
# replace this line with the path to your data:
path = system.file("extdata", package = "cwrshelpr"),
full.names = TRUE,
pattern = ".+\\.xlsx"
)
read_icp(path = files[1]) # read and clean one file
files %>%
set_names() %>%
map_dfr(read_icp, .id = "file") # read and clean multiple files
theme_set(theme_bw())
files <- list.files(
path = system.file("extdata", package = "cwrshelpr"), # replace this line with the path to your data
full.names = TRUE,
pattern = ".+\\.csv"
)
read_feem(path = files[1]) # read and clean one file
feem_dat <- files %>%
set_names() %>%
map_dfr(~ read_feem(.x, truncate = TRUE), .id = "file") # read and clean multiple files
feem_dat %>%
ggplot(aes(excitation, em_regular, fill = intensity)) +
facet_wrap(vars(file)) +
geom_raster() +
scale_fill_viridis_c()
feem_dat %>%
ggplot(aes(excitation, em_regular, z = intensity, fill = stat(level))) +
facet_wrap(vars(file)) +
stat_contour(geom = "polygon") +
scale_fill_viridis_c("intensity")
feem_dat %>%
group_by(file) %>%
nest() %>%
ungroup() %>%
mutate(regions = map(data, integrate_regions)) %>%
unnest(regions)
feem_dat %>%
group_by(file) %>%
nest() %>%
ungroup() %>%
mutate(ix = map(data, calculate_indices)) %>%
unnest(ix)
remotes::install_github("bentrueman/cwrshelpr")
test_that("read_icp() yields a tibble with the expected number of rows", {
file <- list.files(
path = system.file("extdata", package = "cwrshelpr"),
full.names = TRUE
)
expect_equal(nrow(read_icp(file[1])), 1440)
})
library(testthat)
test_that("read_icp() yields a tibble with the expected number of rows", {
file <- list.files(
path = system.file("extdata", package = "cwrshelpr"),
full.names = TRUE
)
expect_equal(nrow(read_icp(file[1])), 1440)
})
library(devtools)
test_that("read_icp() yields a tibble with the expected number of rows", {
file <- list.files(
path = system.file("extdata", package = "cwrshelpr"),
full.names = TRUE
)
expect_equal(nrow(read_icp(file[1])), 1440)
})
load_all()
test_that("read_icp() yields a tibble with the expected number of rows", {
file <- list.files(
path = system.file("extdata", package = "cwrshelpr"),
full.names = TRUE
)
expect_equal(nrow(read_icp(file[1])), 1440)
})
file <- list.files(
path = system.file("extdata", package = "cwrshelpr"),
full.names = TRUE
)
out <- read_icp(file)
file <- list.files(
path = system.file("extdata", package = "cwrshelpr"),
full.names = TRUE
)
file
out <- read_icp(file[2])
expect_snapshot(out)
test_that("read_icp() yields expected output", {
file <- list.files(
path = system.file("extdata", package = "cwrshelpr"),
full.names = TRUE
)
out <- read_icp(file[2])
expect_snapshot(out)
})
test_that("read_icp() yields expected output", {
file <- list.files(
path = system.file("extdata", package = "cwrshelpr"),
full.names = TRUE
)
out <- read_icp(file[2])
expect_snapshot(out)
})
expect_snapshot(out)
test_active_file()
test_active_file()
test_active_file()
test_active_file()
snapshot_accept('read_icp')
snapshot_accept('read_icp')
test_active_file()
test_active_file()
use_R("read_icp")
use_r("read_icp")
document()
test_active_file()
as_tibble_no_warning <- function(x) suppressWarnings(as_tibble(x))
#' @importFrom readxl read_excel
#' @export
#'
#' @examples
#' file <- list.files(
#'    path = system.file("extdata", package = "cwrshelpr"),
#'    full.names = TRUE,
#'    pattern = ".+\\.xlsx"
#' )
#' read_icp(file[1])
read_icp <- function(
path,
sheet_name = "Dilution factor included",
first_line = "Sample List"
) {
path %>%
read_excel(col_names = FALSE, sheet = sheet_name) %>%
# next 8 lines filter out rows before the data starts:
mutate(
start_indicator_var = str_detect(.data$`...1`, first_line) %>%
replace_na(0) %>%
cumsum() %>%
as.logical()
) %>%
filter(.data$start_indicator_var) %>%
select(-.data$start_indicator_var) %>%
t() %>%
as_tibble() %>%
fill(.data$V1) %>%
t() %>%
as_tibble() %>%
two_row_names() %>%
slice(-(1:2)) %>%
clean_names() %>%
select_at(
vars(c(
.data$sample_list_label,
.data$sample_list_category,
starts_with("x")
))
) %>%
pivot_longer(
-c(.data$sample_list_label, .data$sample_list_category),
names_to = c("element", ".value"),
names_pattern = "(.+ked_)(.+)"
) %>%
transmute(
sample_name = .data$sample_list_label,
estimate_type = .data$sample_list_category,
isotope = str_extract(.data$element, "\\d+"),
element = str_replace(.data$element, "(x\\d+)([a-z]+)(.+)", "\\2") %>%
str_to_title(),
value = as.numeric(.data$value),
unit = .data$unit
)
}
document()
rm(list = c("as_tibble_no_warning", "read_icp"))rm(list = c("as_tibble_no_warning", "read_icp"))
rm(list = c("as_tibble_no_warning", "read_icp"))
document()
test_active_file()
document()
check()
library(fffprocessr)
?combine_fff
library(devtools)
use_r("read_icp")
use_r("read_lims")
?read_icp
document()
?read_lims
read_lims(
system.file("extdata", package = "cwrshelpr"),
work_order = "00A123456"
)
system.file("extdata", package = "cwrshelpr")
document()
?read_lims
file <- list.files(
path = system.file("extdata", package = "cwrshelpr"),
full.names = TRUE,
pattern = ".+\\.xlsx"
)
files
file
read_icp(file[1])
document()
?read_lims
document()
?read_lims
file <- list.files(
path = system.file("extdata", package = "cwrshelpr"),
full.names = TRUE,
pattern = ".+\\.xlsx"
)
read_lims(file[3])
document()
file <- list.files(
path = system.file("extdata", package = "cwrshelpr"),
full.names = TRUE,
pattern = ".+\\.xlsx"
)
read_lims(file[3])
?rename_all
?rename_with
document()
?read_icp
file <- list.files(
path = system.file("extdata", package = "cwrshelpr"),
full.names = TRUE,
pattern = ".+\\.xlsx"
)
read_icp(file[1])
?read_lims
file <- list.files(
path = system.file("extdata", package = "cwrshelpr"),
full.names = TRUE,
pattern = ".+\\.xlsx"
)
read_lims(file[3])
document()
file <- list.files(
path = system.file("extdata", package = "cwrshelpr"),
full.names = TRUE,
pattern = ".+\\.xlsx"
)
read_lims(file[3])
read_lims(file[3], work_order = "00A123456")
document()
read_lims(file[3], work_order = "00A123456")
document()
read_lims(file[3], work_order = "00A123456")
use_test("read_lims")
file <- list.files(
path = system.file("extdata", package = "cwrshelpr"),
full.names = TRUE,
pattern = ".+\\.xlsx"
)
test_active_file()
test_active_file()
read_lims(file[3], work_order = "00A123456")
test()
document()
check()
use_package("glue")
check()
remotes::install_github("bentrueman/cwrshelpr")
library("tidyverse")
library("cwrshelpr")
# example path to example raw data file
files <- list.files(
# replace this line with the path to your data:
path = system.file("extdata", package = "cwrshelpr"),
full.names = TRUE,
pattern = ".+\\.xlsx"
)
read_icp(path = files[1]) # read and clean one file
files[1:2] %>%
set_names() %>%
map_dfr(read_icp, .id = "file") # read and clean multiple files
file[3]
files[3]
